digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname="helvetica"] ;
edge [fontname="helvetica"] ;
0 [label=<node &#35;0<br/>Nodes &le; 91<br/>samples = 100%<br/>value = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]<br/>class = PARALLEL_CHEAPEST_INSERTION_and_GUIDED_LOCAL_SEARCH>, fillcolor="#ffffff"] ;
1 [label=<node &#35;1<br/>Vehicles Capacity &le; 141<br/>samples = 50.5%<br/>value = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]<br/>class = PATH_MOST_CONSTRAINED_ARC_and_GUIDED_LOCAL_SEARCH>, fillcolor="#fefeff"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label=<node &#35;2<br/>Nodes &le; 67<br/>samples = 20.2%<br/>value = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]<br/>class = EVALUATOR_STRATEGY_and_GENERIC_TABU_SEARCH>, fillcolor="#fefaf8"] ;
1 -> 2 ;
3 [label=<node &#35;3<br/>samples = 10.3%<br/>value = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]<br/>class = EVALUATOR_STRATEGY_and_GENERIC_TABU_SEARCH>, fillcolor="#e58139"] ;
2 -> 3 ;
4 [label=<node &#35;4<br/>samples = 9.9%<br/>value = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]<br/>class = LOCAL_CHEAPEST_COST_INSERTION_and_GUIDED_LOCAL_SEARCH>, fillcolor="#e2e539"] ;
2 -> 4 ;
5 [label=<node &#35;5<br/>Nodes &le; 32<br/>samples = 30.3%<br/>value = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]<br/>class = PATH_MOST_CONSTRAINED_ARC_and_GUIDED_LOCAL_SEARCH>, fillcolor="#fdfdff"] ;
1 -> 5 ;
6 [label=<node &#35;6<br/>samples = 10.5%<br/>value = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]<br/>class = PATH_MOST_CONSTRAINED_ARC_and_GUIDED_LOCAL_SEARCH>, fillcolor="#3c39e5"] ;
5 -> 6 ;
7 [label=<node &#35;7<br/>Nodes &le; 53<br/>samples = 19.8%<br/>value = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]<br/>class = LOCAL_CHEAPEST_INSERTION_and_GENERIC_TABU_SEARCH>, fillcolor="#f2fdec"] ;
5 -> 7 ;
8 [label=<node &#35;8<br/>samples = 9.7%<br/>value = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]<br/>class = SWEEP_and_SIMULATED_ANNEALING>, fillcolor="#e53958"] ;
7 -> 8 ;
9 [label=<node &#35;9<br/>samples = 10.1%<br/>value = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]<br/>class = LOCAL_CHEAPEST_INSERTION_and_GENERIC_TABU_SEARCH>, fillcolor="#7be539"] ;
7 -> 9 ;
10 [label=<node &#35;10<br/>Vehicles Capacity &le; 189<br/>samples = 49.5%<br/>value = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]<br/>class = PARALLEL_CHEAPEST_INSERTION_and_GUIDED_LOCAL_SEARCH>, fillcolor="#ffffff"] ;
0 -> 10 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
11 [label=<node &#35;11<br/>Vehicles Capacity &le; 184<br/>samples = 29.1%<br/>value = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]<br/>class = PATH_MOST_CONSTRAINED_ARC_and_SIMULATED_ANNEALING>, fillcolor="#fefeff"] ;
10 -> 11 ;
12 [label=<node &#35;12<br/>Nodes &le; 162<br/>samples = 19.5%<br/>value = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]<br/>class = LOCAL_CHEAPEST_INSERTION_and_TABU_SEARCH>, fillcolor="#fafefb"] ;
11 -> 12 ;
13 [label=<node &#35;13<br/>samples = 9.8%<br/>value = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]<br/>class = LOCAL_CHEAPEST_INSERTION_and_TABU_SEARCH>, fillcolor="#39e55e"] ;
12 -> 13 ;
14 [label=<node &#35;14<br/>samples = 9.8%<br/>value = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]<br/>class = SEQUENTIAL_CHEAPEST_INSERTION_and_GREEDY_DESCENT>, fillcolor="#e539c0"] ;
12 -> 14 ;
15 [label=<node &#35;15<br/>samples = 9.6%<br/>value = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]<br/>class = PATH_MOST_CONSTRAINED_ARC_and_SIMULATED_ANNEALING>, fillcolor="#a339e5"] ;
11 -> 15 ;
16 [label=<node &#35;16<br/>Nodes &le; 126<br/>samples = 20.4%<br/>value = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]<br/>class = PARALLEL_CHEAPEST_INSERTION_and_GUIDED_LOCAL_SEARCH>, fillcolor="#feffff"] ;
10 -> 16 ;
17 [label=<node &#35;17<br/>samples = 10.3%<br/>value = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]<br/>class = PARALLEL_CHEAPEST_INSERTION_and_SIMULATED_ANNEALING>, fillcolor="#399de5"] ;
16 -> 17 ;
18 [label=<node &#35;18<br/>samples = 10.1%<br/>value = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]<br/>class = PARALLEL_CHEAPEST_INSERTION_and_GUIDED_LOCAL_SEARCH>, fillcolor="#39e5c5"] ;
16 -> 18 ;
}